services:
  # redis:
  #   image: redis:alpine
  #   container_name: dc-clone-redis
  #   ports:
  #     - '6379:6379'
  #   healthcheck:
  #     test: ['CMD', 'redis-cli', 'ping']
  #     interval: 1s
  #     timeout: 3s
  #     retries: 30 # Retry many times to allow for startup
  postgres:
    image: postgres:15
    container_name: kick-chat-postgres
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER']
      interval: 5s
      timeout: 5s
      retries: 10
  # rabbitmq:
  #   image: rabbitmq:3-management
  #   container_name: dc-clone-rabbitmq
  #   ports:
  #     - '5672:5672'
  #     - '15672:15672'
  #   env_file:
  #     - .env
  #   healthcheck:
  #     test:
  #       ['CMD', 'curl', '-f', 'http://localhost:15672/api/healthchecks/node']
  #     interval: 5s
  #     timeout: 5s
  #     retries: 20 # Daha fazla deneme sayısı
  #     start_period: 30s # RabbitMQ'ya kontrol etmeden önce daha fazla başlangıç süresi verin

volumes:
  postgres_data:
    driver: local

networks:
  default:
    driver: bridge
